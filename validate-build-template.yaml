# Name of the reusable workflow
name: validate-build-template

# Specifies that this workflow can be called by other workflows
on:
  workflow_call:
    inputs:
      # Defines an input parameter for the path to the directory containing the Dockerfile
      working_directory:
        description: 'Path to the directory containing the Dockerfile'
        required: true
        type: string
      # Defines an input parameter for the Docker image tag
      image_tag:
        description: 'Tag for the Docker image'
        required: true
        type: string
    outputs:
      # Defines an output for the reusable workflow, mapping it to a job's output
      build_docker_image_output:
        description: 'Output from the validate-build-template workflow'
        value: ${{ jobs.build-image.outputs.job_output }}

# Defines the jobs within this workflow
jobs:
  # Name of the job responsible for building the Docker image
  build-image:
    runs-on: ubuntu-latest  # Specifies the type of runner on which the job will run

    # Defines the outputs for this job, mapping it to a specific step's output
    outputs:
      build_docker_image_output: ${{ steps.build-docker-image.outputs.step_output }}

    # List of steps to execute in this job
    steps:
    # Step to check out the code from the repository
    - uses: actions/checkout@v2

    # Step to set up Docker Buildx, a tool used for building Docker images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Step to build the Docker image
    - name: build-docker-image
      run: docker build -t ${{ inputs.image_tag }} .  # Builds the Docker image using the provided tag
      working-directory: ${{ inputs.working_directory }}  # Specifies the working directory where the Dockerfile is located